Step 3: Create the Database
Open phpMyAdmin (or any other MySQL client).
Create a database named employee_management.
Create a table named employees with the following structure:


CREATE TABLE employees (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    phone VARCHAR(15),
    position VARCHAR(50),
    salary DECIMAL(10, 2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


Step 4: Build the Application
4.1 Directory Structure
employee_management/
├── index.php        # Employee list page
├── add_employee.php # Form for adding employees
├── db.php           # Database connection file
└── style.css        # Styling for the application


4.2 Database Connection
Create a db.php file to handle database connectivity:

<?php
$host = 'localhost';
$dbname = 'employee_management';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>



4.3 Add Employee Form (add_employee.php)
<?php include 'db.php'; ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Employee</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <h1>Add Employee</h1>
    <form action="add_employee.php" method="POST">
        <label for="name">Name:</label>
        <input type="text" name="name" required><br>

        <label for="email">Email:</label>
        <input type="email" name="email" required><br>

        <label for="phone">Phone:</label>
        <input type="text" name="phone"><br>

        <label for="position">Position:</label>
        <input type="text" name="position"><br>

        <label for="salary">Salary:</label>
        <input type="number" name="salary" step="0.01"><br>

        <button type="submit">Add Employee</button>
    </form>
</body>
</html>

<?php
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $phone = $_POST['phone'];
    $position = $_POST['position'];
    $salary = $_POST['salary'];

    $sql = "INSERT INTO employees (name, email, phone, position, salary) VALUES (?, ?, ?, ?, ?)";
    $stmt = $conn->prepare($sql);

    try {
        $stmt->execute([$name, $email, $phone, $position, $salary]);
        echo "Employee added successfully!";
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>

4.4 Employee List (index.php)
<?php include 'db.php'; ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee List</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <h1>Employee List</h1>
    <a href="add_employee.php">Add New Employee</a>
    <table border="1">
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Position</th>
            <th>Salary</th>
            <th>Created At</th>
        </tr>
        <?php
        $sql = "SELECT * FROM employees";
        $stmt = $conn->query($sql);

        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo "<tr>";
            echo "<td>" . $row['id'] . "</td>";
            echo "<td>" . $row['name'] . "</td>";
            echo "<td>" . $row['email'] . "</td>";
            echo "<td>" . $row['phone'] . "</td>";
            echo "<td>" . $row['position'] . "</td>";
            echo "<td>" . $row['salary'] . "</td>";
            echo "<td>" . $row['created_at'] . "</td>";
            echo "</tr>";
        }
        ?>
    </table>
</body>
</html>
4.5 Styling (style.css)
body {
    font-family: Arial, sans-serif;
    margin: 20px;
    padding: 20px;
}

h1 {
    text-align: center;
}

form label {
    display: block;
    margin-top: 10px;
}

form input {
    width: 100%;
    padding: 5px;
}

button {
    margin-top: 10px;
    padding: 10px 20px;
}

table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

table th, table td {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: center;
}

a {
    display: inline-block;
    margin-bottom: 10px;
}



Step 5: Test the Application
Open the application in the browser.

Add employees using add_employee.php.
View the employee list on index.php.